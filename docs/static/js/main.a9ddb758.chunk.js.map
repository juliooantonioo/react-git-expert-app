{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cat","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SAPW,SAACC,GACfA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAUL,GAAV,mBAAyBK,OACvCJ,EAAc,KAIjB,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAhBc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcXM,GAdW,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,4BAAIA,QCDHO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECDX,SAACA,GAAe,IAAD,EAEdZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAGGqB,EDfwBK,CAAe1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGpB,OACI,qCACA,6BAAKpB,IACJoB,GAAW,cACX,qBAAKJ,UAAY,YAAjB,SAEWH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEd1BgB,EAAe,WAAM,IAAD,EAEOvC,mBAAS,CAAC,aAFjB,mBAEtBwC,EAFsB,KAEVzC,EAFU,KAI7B,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQyC,EAAWnB,KAAI,SAAAf,GAAG,OACd,cAAC,EAAD,CAAmBM,UAAWN,GAAhBA,YCVlCmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a9ddb758.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n           e.preventDefault(); \r\n           setCategorias((cat) => [inputValue, ...cat]);\r\n           setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategorias: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n","\r\nexport const getGifs = async(categoria) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=NYp29FM6UyfIBNJywVmmIbvjEYVrW79r&q=${encodeURI(categoria)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return (gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__flash'>\r\n            <img src= {url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const {data:images, loading} = useFetchGifts( categoria ); \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{categoria}</h3>\r\n        {loading && 'Cargando...'}\r\n         <div className = 'card-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}/>\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifts = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(categoria)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [categoria])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () =>{\r\n    \r\n    const [categorias, setCategorias] = useState(['Hunter X']);\r\n\r\n    return (\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategorias={setCategorias}/>\r\n        <hr/>\r\n        <ol>\r\n            {\r\n                categorias.map(cat => (\r\n                    <GifGrid key={cat} categoria={cat}/>\r\n                ))\r\n            }\r\n        </ol>\r\n    </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp.js'\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}